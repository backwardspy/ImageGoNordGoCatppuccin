on:
  - push
  - pull_request

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, macos-10.15, windows-2019]
        rust: [stable]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2

      - name: Restore cargo cache
        uses: actions/cache@v2
        env:
          cache-name: ci
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ~/.cargo/bin
            target
          key: ${{ matrix.os }}-${{ env.cache-name }}-${{ matrix.rust }}-${{ hashFiles('Cargo.lock') }}

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          default: true
          profile: minimal
          components: clippy

      - name: Check code format
        run: |
          cargo fmt --check
          cd native
          cargo fmt --check

      - name: Run clippy
        run: |
          cargo clippy
          cd native
          cargo clippy

      - name: Build Release
        working-directory: ./native
        run: "cargo build --release"

      - name: Archive Linux/macOS artifact
        if: matrix.os != 'windows-2019'
        run: |
          cd ./native/target/release/
          tar czvf faerber-cli.tar.gz faerber-cli
      - name: Upload Linux/macOS artifact
        if: matrix.os != 'windows-2019'
        uses: actions/upload-artifact@v3
        with:
          name: faerber-cli-${{matrix.os}}
          path: ./native/target/release/faerber-cli.tar.gz

      - name: Upload Windows artifact
        if: matrix.os == 'windows-2019'
        uses: actions/upload-artifact@v3
        with:
          name: faerber-cli-${{matrix.os}}
          path: ./native/target/release/faerber-cli.exe
